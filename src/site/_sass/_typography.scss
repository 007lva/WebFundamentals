/**
*
* Typography
*
* Google Web Essentials
*
* R/GA 2014
* @author Pedro Duarte
* @author Antoine Grelard
*
**/


// Mixins simply to store CSS rules
@mixin rule--small {
  font-size: $fontSmall;
  line-height: 2.0000em; /* 26px */
  margin-top: 2.0000em;
  margin-bottom: 0;
}

@mixin rule--base {
  font-size: $fontBase;
  line-height: 1.6250em; /* 26px */
  margin-top: 1.6250em;
  margin-bottom: 0;
}

@mixin rule--medium {
  font-size: $fontMedium;
  font-weight: 300;
  line-height: 1.3000em; /* 26px */
  margin-top: 1.3000em;
  margin-bottom: 0;
}

@mixin rule--large {
  font-size: $fontLarge;
  font-weight: 300;
  line-height: 1.0000em; /* 26px */
  margin-top: 1.0000em;
  margin-bottom: 0;
}

@mixin rule--xlarge {
  font-family: $fontHighlight;
  font-size: $fontXLarge;
  font-weight: 300;
  line-height: 1.2381em; /* 52px */
  margin-top: 0.6190em;
  margin-bottom: 0;
}

@mixin rule--xxlarge {
  font-family: $fontHighlight;
  font-size: $fontXXLarge;
  font-weight: 300;
  line-height: 1.1471em; /* 78px */
  margin-top: 0.3824em;
  margin-bottom: 0;
}

@mixin rule--huge {
  font-family: $fontHighlight;
  font-size: $fontHuge;
  font-weight: 300;
  line-height: 1.19em; /* 130px */
  margin-top: 0.2364em;
  margin-bottom: 0;
}



// Mixins to determine which rule to use at which breakpoint
@mixin type--small($isFromMixin: false) {
  @include rule--small;
}

@mixin type--base($isFromMixin: false) {
  @include rule--base;
}

@mixin type--medium($isFromMixin: false) {
  @if $isFromMixin == false {
    @include type--base(true);
    @include wide {
      @include rule--medium;
    }
  }
  @else {
    @include rule--medium;
  }
}

@mixin type--large($isFromMixin: false) {
  @if $isFromMixin == false {
    @include type--medium(true);
    @include wide {
      @include rule--large;
    }
  }
  @else {
    @include rule--large;
  }
}

@mixin type--xlarge($isFromMixin: false) {
  @if $isFromMixin == false {
    @include type--large(true);
    @include wide {
      @include rule--xlarge;
    }
  }
  @else {
    @include rule--xlarge;
  }
}

@mixin type--xxlarge($isFromMixin: false) {
  @if $isFromMixin == false {
    @include type--xlarge(true);
    @include wide {
      @include rule--xxlarge;
    }
  }
  @else {
    @include rule--xxlarge;
  }
}

@mixin type--huge($isFromMixin: false) {
  @include type--xxlarge(true);

  @include wide {
    @include rule--huge;
  }
}


// Definitions
.small,
small {
  @include type--small;
}

.base,
p {
  @include type--base;
}

.medium,
h4 {
  @include type--medium;
}

.large,
h3 {
  @include type--large;
}
.xlarge,
h2 {
  @include type--xlarge;
}

.xxlarge,
h1 {
  @include type--xxlarge;
}

.huge {
  @include type--huge;
}

